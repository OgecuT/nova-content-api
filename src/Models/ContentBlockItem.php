<?php

namespace Ogecut\ContentApi\Models;

use Eloquent;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Relations\BelongsTo;
use Spatie\MediaLibrary\HasMedia;
use Spatie\MediaLibrary\InteractsWithMedia;
use Whitecube\NovaFlexibleContent\Concerns\HasFlexible;

/**
 * @package Ogecut\ContentApi\Models
 * @mixin Eloquent
 *
 * @property int $id
 * @property string|null $name
 *
 * @property-read ContentBlock $block
 */
class ContentBlockItem extends Model implements HasMedia
{
    use InteractsWithMedia, HasFlexible;
    
    protected $table = 'content_blocks_items';
    protected $casts = [
        'content' => 'array',
    ];
    
    private $content = [];
    
    public function __set($key, $value)
    {
        if (substr_count($key, 'content__')) {
            $this->content[$this->getContentKey($key)] = $value;
            $this->attributes['content'] = json_encode($this->content, JSON_THROW_ON_ERROR);
            
            return $this;
        }
        
        parent::__set($key, $value); // TODO: Change the autogenerated stub
    }
    
    public function getAttribute($key)
    {
        $content = json_decode($this->attributes['content'] ?? '[]', true, 512, JSON_THROW_ON_ERROR);
        if (array_key_exists($this->getContentKey($key), $content)) {
            return $content[$this->getContentKey($key)];
        }
        
        return parent::getAttribute($key);
    }
    
    private function getContentKey(string $key)
    {
        return str_replace('content__', '', $key);
    }
    
    public function block(): BelongsTo
    {
        return $this->belongsTo(ContentBlock::class, 'block_id', 'id');
    }
}
